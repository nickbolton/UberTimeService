<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/FBSettings.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/FBSettings</TokenIdentifier>
			<Abstract type="html">@typedef</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>
			
			<NodeRef refid="42"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/loggingBehavior</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (NSSet *)loggingBehavior</Declaration>
			
			
			<Anchor>//api/name/loggingBehavior</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/setLoggingBehavior:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)setLoggingBehavior:(NSSet *)loggingBehavior</Declaration>
			<Parameters>
				<Parameter>
					<Name>loggingBehavior</Name>
					<Abstract type="html">A set of strings indicating what information should be logged.  If nil is provided, the logging
behavior is reset to the default set of enabled behaviors.  Set in an empty set in order to disable all logging.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setLoggingBehavior:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/shouldAutoPublishInstall</TokenIdentifier>
			<Abstract type="html">@abstract Retreive the current auto publish behavior.  Defaults to YES.</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)shouldAutoPublishInstall</Declaration>
			
			
			<Anchor>//api/name/shouldAutoPublishInstall</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/setShouldAutoPublishInstall:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)setShouldAutoPublishInstall:(BOOL)autoPublishInstall</Declaration>
			<Parameters>
				<Parameter>
					<Name>autoPublishInstall</Name>
					<Abstract type="html">If YES, automatically publish the install; if NO, do not.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setShouldAutoPublishInstall:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/publishInstall:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)publishInstall:(NSString *)appID</Declaration>
			<Parameters>
				<Parameter>
					<Name>appID</Name>
					<Abstract type="html">A specific appID to publish an install for.  If nil, uses [FBSession defaultAppID].</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/publishInstall:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/publishInstall:withHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)publishInstall:(NSString *)appID withHandler:(FBInstallResponseDataHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>appID</Name>
					<Abstract type="html">A specific appID to publish an install for.  If nil, uses [FBSession defaultAppID].</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">A block to call with the server&apos;s response.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/publishInstall:withHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/clientToken</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)clientToken</Declaration>
			
			
			<Anchor>//api/name/clientToken</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/setClientToken:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)setClientToken:(NSString *)clientToken</Declaration>
			<Parameters>
				<Parameter>
					<Name>clientToken</Name>
					<Abstract type="html">The Facebook App&apos;s &quot;client token&quot;, which, for a given appid can be found in the Security
section of the Advanced tab of the Facebook App settings found at https://developers.facebook.com/apps/[your-app-id]&gt;</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setClientToken:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/setDefaultDisplayName:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)setDefaultDisplayName:(NSString *)displayName</Declaration>
			<Parameters>
				<Parameter>
					<Name>displayName</Name>
					<Abstract type="html">The default Facebook Display Name to be used by the SDK.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDefaultDisplayName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/defaultDisplayName</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)defaultDisplayName</Declaration>
			
			
			<Anchor>//api/name/defaultDisplayName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/setDefaultAppID:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)setDefaultAppID:(NSString *)appID</Declaration>
			<Parameters>
				<Parameter>
					<Name>appID</Name>
					<Abstract type="html">The default Facebook App ID to be used by the SDK.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDefaultAppID:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/defaultAppID</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)defaultAppID</Declaration>
			
			
			<Anchor>//api/name/defaultAppID</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/setDefaultUrlSchemeSuffix:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)setDefaultUrlSchemeSuffix:(NSString *)urlSchemeSuffix</Declaration>
			<Parameters>
				<Parameter>
					<Name>urlSchemeSuffix</Name>
					<Abstract type="html">The default url scheme suffix to be used by the SDK.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDefaultUrlSchemeSuffix:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/defaultUrlSchemeSuffix</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)defaultUrlSchemeSuffix</Declaration>
			
			
			<Anchor>//api/name/defaultUrlSchemeSuffix</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/enableBetaFeatures:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)enableBetaFeatures:(NSUInteger)betaFeatures</Declaration>
			<Parameters>
				<Parameter>
					<Name>betaFeatures</Name>
					<Abstract type="html">The beta features to enable (expects a bitwise OR of FBBetaFeatures)</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableBetaFeatures:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/enableBetaFeature:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)enableBetaFeature:(FBBetaFeatures)betaFeature</Declaration>
			<Parameters>
				<Parameter>
					<Name>betaFeature</Name>
					<Abstract type="html">The beta feature to enable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/enableBetaFeature:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/disableBetaFeature:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (void)disableBetaFeature:(FBBetaFeatures)betaFeature</Declaration>
			<Parameters>
				<Parameter>
					<Name>betaFeature</Name>
					<Abstract type="html">The beta feature to disable.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/disableBetaFeature:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/isBetaFeatureEnabled:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)isBetaFeatureEnabled:(FBBetaFeatures)betaFeature</Declaration>
			<Parameters>
				<Parameter>
					<Name>betaFeature</Name>
					<Abstract type="html">The beta feature to check.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if the beta feature is enabled, NO if not.</Abstract></ReturnValue>
			<Anchor>//api/name/isBetaFeatureEnabled:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/autoPublishInstall:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBSettings+Internal.h</DeclaredIn>			
			
			<Declaration>+ (void)autoPublishInstall:(NSString *)appID</Declaration>
			
			
			<Anchor>//api/name/autoPublishInstall:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBSettings/defaultURLScheme</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBSettings+Internal.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)defaultURLScheme</Declaration>
			
			
			<Anchor>//api/name/defaultURLScheme</Anchor>
		</Token>
		
	</File>
</Tokens>
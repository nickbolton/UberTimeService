<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/FBRequestConnection.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/FBRequestConnection</TokenIdentifier>
			<Abstract type="html">@class FBRequestConnection</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>
			
			<NodeRef refid="37"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/init</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/initWithTimeout:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTimeout:(NSTimeInterval)timeout</Declaration>
			<Parameters>
				<Parameter>
					<Name>timeout</Name>
					<Abstract type="html">The NSTimeInterval (seconds) to wait for a response before giving up.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithTimeout:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/setUrlRequest:</TokenIdentifier>
			<Abstract type="html">@abstract
The request that will be sent to the server.</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSMutableURLRequest *urlRequest</Declaration>
			
			
			<Anchor>//api/name/urlRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FBRequestConnection/urlRequest</TokenIdentifier>
			<Abstract type="html">@abstract
The request that will be sent to the server.</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readwrite) NSMutableURLRequest *urlRequest</Declaration>
			
			
			<Anchor>//api/name/urlRequest</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/setUrlResponse:</TokenIdentifier>
			<Abstract type="html">@abstract
The raw response that was returned from the server.  (readonly)</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSHTTPURLResponse *urlResponse</Declaration>
			
			
			<Anchor>//api/name/urlResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FBRequestConnection/urlResponse</TokenIdentifier>
			<Abstract type="html">@abstract
The raw response that was returned from the server.  (readonly)</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, retain, readonly) NSHTTPURLResponse *urlResponse</Declaration>
			
			
			<Anchor>//api/name/urlResponse</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/addRequest:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)addRequest:(FBRequest *)request completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A request to be included in the round-trip when start is called.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">A handler to call back when the round-trip completes or times out.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addRequest:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/addRequest:completionHandler:batchEntryName:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)addRequest:(FBRequest *)request completionHandler:(FBRequestHandler)handler batchEntryName:(NSString *)name</Declaration>
			<Parameters>
				<Parameter>
					<Name>request</Name>
					<Abstract type="html">A request to be included in the round-trip when start is called.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">A handler to call back when the round-trip completes or times out.</Abstract>
				</Parameter><Parameter>
					<Name>name</Name>
					<Abstract type="html">An optional name for this request.  This can be used to feed
the results of one request to the input of another FBRequest in the same
FBRequestConnection as described in
[Graph API Batch Requests]( https://developers.facebook.com/docs/reference/api/batch/ ).</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addRequest:completionHandler:batchEntryName:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/start</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)start</Declaration>
			
			
			<Anchor>//api/name/start</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/cancel</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>- (void)cancel</Declaration>
			
			
			<Anchor>//api/name/cancel</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForMeWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForMeWithCompletionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForMeWithCompletionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForMyFriendsWithCompletionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForMyFriendsWithCompletionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForMyFriendsWithCompletionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForUploadPhoto:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForUploadPhoto:(UIImage *)photo completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>photo</Name>
					<Abstract type="html">A UIImage for the photo to upload.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForUploadPhoto:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostStatusUpdate:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostStatusUpdate:(NSString *)message completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">The message to post.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostStatusUpdate:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostStatusUpdate:place:tags:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostStatusUpdate:(NSString *)message place:(id)place tags:(id&lt;NSFastEnumeration&gt;)tags completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>message</Name>
					<Abstract type="html">The message to post.</Abstract>
				</Parameter><Parameter>
					<Name>place</Name>
					<Abstract type="html">The place to checkin with, or nil. Place may be an fbid or a
graph object representing a place.</Abstract>
				</Parameter><Parameter>
					<Name>tags</Name>
					<Abstract type="html">Array of friends to tag in the status update, each element
may be an fbid or a graph object representing a user.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostStatusUpdate:place:tags:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPlacesSearchAtCoordinate:(CLLocationCoordinate2D)coordinate radiusInMeters:(NSInteger)radius resultsLimit:(NSInteger)limit searchText:(NSString *)searchText completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>coordinate</Name>
					<Abstract type="html">The search coordinates.</Abstract>
				</Parameter><Parameter>
					<Name>radius</Name>
					<Abstract type="html">The search radius in meters.</Abstract>
				</Parameter><Parameter>
					<Name>limit</Name>
					<Abstract type="html">The maxiumum number of results to return.  It is
                        possible to receive fewer than this because of the 
                        radius and because of server limits.</Abstract>
				</Parameter><Parameter>
					<Name>searchText</Name>
					<Abstract type="html">The text to use in the query to narrow the set of places
                        returned.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPlacesSearchAtCoordinate:radiusInMeters:resultsLimit:searchText:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForCustomAudienceThirdPartyID:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForCustomAudienceThirdPartyID:(FBSession *)session completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>session</Name>
					<Abstract type="html">The FBSession to use to establish the user&apos;s identity for users logged into Facebook through this app.
If nil, then the activeSession is used.  If the session is not open, then the appID|clientToken are used to construct the access
token for the request.

@discussion
This method will thrown an exception if either [FBSettings defaultAppID] or [FBSettings clientToken] are nil.  The appID won&apos;t be nil when the pList
includes the appID, or if it&apos;s explicitly set.  The clientToken needs to be set via [FBSettings setClientToken:].

The JSON in the request&apos;s response will include an &quot;customaudiencethirdpartyid&quot; key/value pair, with the value being the ID retrieved.
This ID is an encrypted encoding of the Facebook user&apos;s ID and the invoking Facebook app ID.
Multiple calls with the same user will return different IDs, thus these IDs cannot be used to correlate behavior
across devices or applications, and are only meaningful when sent back to Facebook for creating Custom Audiences.

The ID retrieved represents the Facebook user identified in the following way: if the specified session (or activeSession if the specified
session is nil) is open, the ID will represent the user associated with the activeSession; otherwise the ID will represent the user logged into the
native Facebook app on the device.  If there is no native Facebook app, no one is logged into it, or the user has opted out
at the iOS level from ad tracking, then a nil ID will be returned.

This method itself returning nil indicates that either the user has opted-out (via iOS) from Ad Tracking, or a specific Facebook user cannot
be identified.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForCustomAudienceThirdPartyID:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startWithGraphPath:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startWithGraphPath:(NSString *)graphPath completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>graphPath</Name>
					<Abstract type="html">The Graph API endpoint to use for the request, for example &quot;me&quot;.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startWithGraphPath:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForDeleteObject:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForDeleteObject:(id)object completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">The object to delete, may be an NSString or NSNumber representing an fbid or an NSDictionary with an id property</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForDeleteObject:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostWithGraphPath:graphObject:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostWithGraphPath:(NSString *)graphPath graphObject:(id&lt;FBGraphObject&gt;)graphObject completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>graphPath</Name>
					<Abstract type="html">The Graph API endpoint to use for the request, for example &quot;me&quot;.</Abstract>
				</Parameter><Parameter>
					<Name>graphObject</Name>
					<Abstract type="html">An object or open graph action to post.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostWithGraphPath:graphObject:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startWithGraphPath:parameters:HTTPMethod:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startWithGraphPath:(NSString *)graphPath parameters:(NSDictionary *)parameters HTTPMethod:(NSString *)HTTPMethod completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>graphPath</Name>
					<Abstract type="html">The Graph API endpoint to use for the request, for example &quot;me&quot;.</Abstract>
				</Parameter><Parameter>
					<Name>parameters</Name>
					<Abstract type="html">The parameters for the request. A value of nil sends only the automatically handled parameters, for example, the access token. The default is nil.</Abstract>
				</Parameter><Parameter>
					<Name>HTTPMethod</Name>
					<Abstract type="html">The HTTP method to use for the request. A nil value implies a GET.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startWithGraphPath:parameters:HTTPMethod:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostOpenGraphObject:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostOpenGraphObject:(id&lt;FBOpenGraphObject&gt;)object completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">The Open Graph object to create. Some common expected fields include &quot;title&quot;, &quot;image&quot;, &quot;url&quot;, etc.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostOpenGraphObject:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForPostOpenGraphObjectWithType:title:image:url:description:objectProperties:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForPostOpenGraphObjectWithType:(NSString *)type title:(NSString *)title image:(id)image url:(id)url description:(NSString *)description objectProperties:(NSDictionary *)objectProperties completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>type</Name>
					<Abstract type="html">The fully-specified Open Graph object type (e.g., myappnamespace:myobjectname)</Abstract>
				</Parameter><Parameter>
					<Name>title</Name>
					<Abstract type="html">The title of the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>image</Name>
					<Abstract type="html">The link to an image to be associated with the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The url to be associated with the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The description for the object.</Abstract>
				</Parameter><Parameter>
					<Name>objectProperties</Name>
					<Abstract type="html">Any additional properties for the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForPostOpenGraphObjectWithType:title:image:url:description:objectProperties:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForUpdateOpenGraphObject:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForUpdateOpenGraphObject:(id&lt;FBOpenGraphObject&gt;)object completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>object</Name>
					<Abstract type="html">The Open Graph object to update the existing object with.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForUpdateOpenGraphObject:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForUpdateOpenGraphObjectWithId:title:image:url:description:objectProperties:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForUpdateOpenGraphObjectWithId:(id)objectId title:(NSString *)title image:(id)image url:(id)url description:(NSString *)description objectProperties:(NSDictionary *)objectProperties completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>objectId</Name>
					<Abstract type="html">The id of the Open Graph object to update.</Abstract>
				</Parameter><Parameter>
					<Name>title</Name>
					<Abstract type="html">The updated title of the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>image</Name>
					<Abstract type="html">The updated link to an image to be associated with the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>url</Name>
					<Abstract type="html">The updated url to be associated with the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>description</Name>
					<Abstract type="html">The object&apos;s description.</Abstract>
				</Parameter><Parameter>
					<Name>objectProperties</Name>
					<Abstract type="html">Any additional properties to update for the Open Graph object.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes with a success, error, or cancel action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForUpdateOpenGraphObjectWithId:title:image:url:description:objectProperties:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/FBRequestConnection/startForUploadStagingResourceWithImage:completionHandler:</TokenIdentifier>
			<Abstract type="html">@method</Abstract>
			<DeclaredIn>FBRequestConnection.h</DeclaredIn>			
			
			<Declaration>+ (FBRequestConnection *)startForUploadStagingResourceWithImage:(UIImage *)image completionHandler:(FBRequestHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>image</Name>
					<Abstract type="html">A UIImage for the image to upload.</Abstract>
				</Parameter><Parameter>
					<Name>handler</Name>
					<Abstract type="html">The handler block to call when the request completes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startForUploadStagingResourceWithImage:completionHandler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/setIsResultFromCache:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBRequestConnection+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isResultFromCache</Declaration>
			
			
			<Anchor>//api/name/isResultFromCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/FBRequestConnection/isResultFromCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBRequestConnection+Internal.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) BOOL isResultFromCache</Declaration>
			
			
			<Anchor>//api/name/isResultFromCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/FBRequestConnection/startWithCacheIdentity:skipRoundtripIfCached:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>FBRequestConnection+Internal.h</DeclaredIn>			
			
			<Declaration>- (void)startWithCacheIdentity:(NSString *)cacheIdentity skipRoundtripIfCached:(BOOL)consultCache</Declaration>
			
			
			<Anchor>//api/name/startWithCacheIdentity:skipRoundtripIfCached:</Anchor>
		</Token>
		
	</File>
</Tokens>